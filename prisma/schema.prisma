// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// 権限定義
enum Role {
  ADMIN
  USER
}

// ユーザー情報
model User {
  id        String   @id @default(uuid())
  name      String   @db.VarChar(20)
  email     String   @unique
  role      Role     @default(USER)
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())

  blog Blog[]
  memo Memo[]
  like Like[]
}

// ReactやJavascriptなどのタグ一覧(削除しない)
model Tag {
  id   String @id @default(uuid())
  name String @unique @db.VarChar(50)

  blog Blog[]
  memo Memo[]
}

// 記事内容DB
model Blog {
  id        String   @id @default(uuid())
  userId    String
  tagId     String
  title     String   @db.VarChar(100)
  contents  String
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())

  user User   @relation(fields: [userId], references: [id])
  tag  Tag    @relation(fields: [tagId], references: [id])
  like Like[]
}

// 下書き用(削除またはBlogにデータが送信された時点で下書きは物理削除する)
model Memo {
  id        String   @id @default(uuid())
  userId    String
  tagId     String
  title     String   @db.VarChar(100)
  contents  String
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())

  user User @relation(fields: [userId], references: [id])
  tag  Tag  @relation(fields: [tagId], references: [id])
}

// お気に入り登録用テーブル(いいねすると作成され、いいねを外すと物理削除される)
model Like {
  id        Int      @id @default(autoincrement())
  userId    String
  blogId    String
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())

  user User @relation(fields: [userId], references: [id])
  blog Blog @relation(fields: [blogId], references: [id])
}
